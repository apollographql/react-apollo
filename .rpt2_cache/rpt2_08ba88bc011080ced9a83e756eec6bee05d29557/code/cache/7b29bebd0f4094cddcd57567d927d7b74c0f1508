{"map":"{\"version\":3,\"file\":\"ApolloConsumer.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../src/ApolloConsumer.tsx\"],\"names\":[],\"mappings\":\"AACA,OAAO,KAAK,SAAS,MAAM,YAAY,CAAC;AAGxC,IAAM,SAAS,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC;AAMvC,IAAM,cAAc,GAAkD,UAAC,KAAK,EAAE,OAAO;IACnF,SAAS,CACP,CAAC,CAAC,OAAO,CAAC,MAAM,EAChB,4GAA0G,CAC3G,CAAC;IAEF,OAAO,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;AACxC,CAAC,CAAC;AAEF,cAAc,CAAC,YAAY,GAAG;IAC5B,MAAM,EAAE,SAAS,CAAC,MAAM,CAAC,UAAU;CACpC,CAAC;AAEF,cAAc,CAAC,SAAS,GAAG;IACzB,QAAQ,EAAE,SAAS,CAAC,IAAI,CAAC,UAAU;CACpC,CAAC;AAEF,eAAe,cAAc,CAAC\"}","code":"import * as PropTypes from 'prop-types';\r\nvar invariant = require('invariant');\r\nvar ApolloConsumer = function (props, context) {\r\n    invariant(!!context.client, \"Could not find \\\"client\\\" in the context of ApolloConsumer. Wrap the root component in an <ApolloProvider>\");\r\n    return props.children(context.client);\r\n};\r\nApolloConsumer.contextTypes = {\r\n    client: PropTypes.object.isRequired,\r\n};\r\nApolloConsumer.propTypes = {\r\n    children: PropTypes.func.isRequired,\r\n};\r\nexport default ApolloConsumer;\r\n//# sourceMappingURL=ApolloConsumer.js.map","dts":{"name":"/Users/jovi/Documents/SideProjects/react-apollo/src/ApolloConsumer.d.ts","writeByteOrderMark":false,"text":"import * as React from 'react';\r\nimport ApolloClient from 'apollo-client';\r\nexport interface ApolloConsumerProps {\r\n    children: (client: ApolloClient<any>) => React.ReactElement<any> | null;\r\n}\r\ndeclare const ApolloConsumer: React.StatelessComponent<ApolloConsumerProps>;\r\nexport default ApolloConsumer;\r\n"}}
