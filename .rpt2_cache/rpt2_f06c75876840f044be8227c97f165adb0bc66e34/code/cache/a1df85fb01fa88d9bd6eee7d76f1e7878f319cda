{"map":"{\"version\":3,\"file\":\"getDataFromTree.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../src/getDataFromTree.ts\"],\"names\":[],\"mappings\":\"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\"}","code":"import * as tslib_1 from \"tslib\";\r\nimport * as React from 'react';\r\nimport * as PropTypes from 'prop-types';\r\nvar Trie = (function () {\r\n    function Trie() {\r\n        this.children = null;\r\n        this.added = false;\r\n    }\r\n    Trie.prototype.has = function () {\r\n        var keys = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            keys[_i] = arguments[_i];\r\n        }\r\n        var node = this;\r\n        return keys.every(function (key) {\r\n            var child = node.children && node.children.get(key);\r\n            return !!(child && (node = child));\r\n        }) && node.added;\r\n    };\r\n    Trie.prototype.add = function () {\r\n        var keys = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            keys[_i] = arguments[_i];\r\n        }\r\n        var node = this;\r\n        keys.forEach(function (key) {\r\n            var map = node.children || (node.children = new Map);\r\n            var child = map.get(key);\r\n            if (child) {\r\n                node = child;\r\n            }\r\n            else {\r\n                map.set(key, node = new Trie());\r\n            }\r\n        });\r\n        node.added = true;\r\n    };\r\n    return Trie;\r\n}());\r\nvar RenderPromises = (function () {\r\n    function RenderPromises() {\r\n        this.queryPromises = new Map();\r\n        this.queryGraveyard = new Trie();\r\n    }\r\n    RenderPromises.prototype.addQueryPromise = function (queryInstance, finish) {\r\n        var _a = queryInstance.props, query = _a.query, variables = _a.variables;\r\n        if (!this.queryGraveyard.has(query, JSON.stringify(variables))) {\r\n            this.queryPromises.set(queryInstance, new Promise(function (resolve) {\r\n                resolve(queryInstance.fetchData());\r\n            }));\r\n            return null;\r\n        }\r\n        return finish();\r\n    };\r\n    RenderPromises.prototype.hasPromises = function () {\r\n        return this.queryPromises.size > 0;\r\n    };\r\n    RenderPromises.prototype.consumeAndAwaitPromises = function () {\r\n        var _this = this;\r\n        var promises = [];\r\n        this.queryPromises.forEach(function (promise, queryInstance) {\r\n            var _a = queryInstance.props, query = _a.query, variables = _a.variables;\r\n            _this.queryGraveyard.add(query, JSON.stringify(variables));\r\n            promises.push(promise);\r\n        });\r\n        this.queryPromises.clear();\r\n        return Promise.all(promises);\r\n    };\r\n    return RenderPromises;\r\n}());\r\nexport { RenderPromises };\r\nexport default function getDataFromTree(tree, context) {\r\n    if (context === void 0) { context = {}; }\r\n    return getMarkupFromTree({\r\n        tree: tree,\r\n        context: context,\r\n        renderFunction: require(\"react-dom/server\").renderToStaticMarkup,\r\n    });\r\n}\r\nexport function getMarkupFromTree(_a) {\r\n    var tree = _a.tree, _b = _a.context, context = _b === void 0 ? {} : _b, _c = _a.renderFunction, renderFunction = _c === void 0 ? require(\"react-dom/server\").renderToStaticMarkup : _c;\r\n    var renderPromises = new RenderPromises();\r\n    var RenderPromisesProvider = (function (_super) {\r\n        tslib_1.__extends(RenderPromisesProvider, _super);\r\n        function RenderPromisesProvider() {\r\n            return _super !== null && _super.apply(this, arguments) || this;\r\n        }\r\n        RenderPromisesProvider.prototype.getChildContext = function () {\r\n            return tslib_1.__assign({}, context, { renderPromises: renderPromises });\r\n        };\r\n        RenderPromisesProvider.prototype.render = function () {\r\n            return tree;\r\n        };\r\n        RenderPromisesProvider.childContextTypes = {\r\n            renderPromises: PropTypes.object,\r\n        };\r\n        return RenderPromisesProvider;\r\n    }(React.Component));\r\n    Object.keys(context).forEach(function (key) {\r\n        RenderPromisesProvider.childContextTypes[key] = PropTypes.any;\r\n    });\r\n    function process() {\r\n        var html = renderFunction(React.createElement(RenderPromisesProvider));\r\n        return renderPromises.hasPromises()\r\n            ? renderPromises.consumeAndAwaitPromises().then(process)\r\n            : html;\r\n    }\r\n    return Promise.resolve().then(process);\r\n}\r\n//# sourceMappingURL=getDataFromTree.js.map","dts":{"name":"/Users/jovi/Documents/SideProjects/react-apollo/src/getDataFromTree.d.ts","writeByteOrderMark":false,"text":"import * as React from 'react';\r\nimport Query from './Query';\r\nexport declare class RenderPromises {\r\n    private queryPromises;\r\n    private queryGraveyard;\r\n    addQueryPromise<TData, TVariables>(queryInstance: Query<TData, TVariables>, finish: () => React.ReactNode): React.ReactNode;\r\n    hasPromises(): boolean;\r\n    consumeAndAwaitPromises(): Promise<any[]>;\r\n}\r\nexport default function getDataFromTree(tree: React.ReactNode, context?: {\r\n    [key: string]: any;\r\n}): Promise<string>;\r\nexport declare type GetMarkupFromTreeOptions = {\r\n    tree: React.ReactNode;\r\n    context?: {\r\n        [key: string]: any;\r\n    };\r\n    renderFunction?: (tree: React.ReactElement<any>) => string;\r\n};\r\nexport declare function getMarkupFromTree({ tree, context, renderFunction, }: GetMarkupFromTreeOptions): Promise<string>;\r\n"}}
