{"map":"{\"version\":3,\"file\":\"mutation-hoc.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../src/mutation-hoc.tsx\"],\"names\":[],\"mappings\":\";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAE/B,IAAM,oBAAoB,GAAG,OAAO,CAAC,yBAAyB,CAAC,CAAC;AAEhE,OAAO,EAAE,MAAM,EAAE,MAAM,UAAU,CAAC;AAElC,OAAO,EAAE,OAAO,IAAI,QAAQ,EAAE,MAAM,YAAY,CAAC;AACjD,OAAO,EACL,wBAAwB,EACxB,cAAc,EACd,2BAA2B,EAC3B,WAAW,GACZ,MAAM,aAAa,CAAC;AAErB,MAAM,UAAU,YAAY,CAM1B,QAAsB,EACtB,gBAAqF;IAArF,iCAAA,EAAA,qBAAqF;IAGrF,IAAM,SAAS,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;IAG3B,IAAA,6BAAkC,EAAlC,uDAAkC,EAAE,2BAAgB,EAAhB,qCAAgB,CAAsB;IAElF,IAAI,iBAAiB,GAAG,OAAuC,CAAC;IAChE,IAAI,OAAO,iBAAiB,KAAK,UAAU;QAAE,iBAAiB,GAAG,cAAM,OAAA,OAAuB,EAAvB,CAAuB,CAAC;IAE/F,OAAO,UACL,gBAA2D;QAE3D,IAAM,kBAAkB,GAAM,KAAK,SAAI,cAAc,CAAC,gBAAgB,CAAC,MAAG,CAAC;QAC3E;YAAsB,mCAAgC;YAAtD;;YAwCA,CAAC;YArCC,wBAAM,GAAN;gBACE,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;gBACvB,IAAM,IAAI,GAAG,iBAAiB,CAAC,KAAK,CAAC,CAAC;gBAEtC,IAAI,gBAAgB,CAAC,OAAO,EAAE;oBAC5B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;oBACpB,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,EAAE;wBAC/B,GAAG,EAAE,IAAI,CAAC,kBAAkB;qBAC7B,CAAC,CAAC;iBACJ;gBACD,IAAI,CAAC,IAAI,CAAC,SAAS,IAAI,SAAS,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;oBACrD,IAAI,CAAC,SAAS,GAAG,2BAA2B,CAC1C,SAAS,EACT,KAAK,EACL,kBAAkB,EAClB,cAAc,CAAC,gBAAgB,CAAC,CACjC,CAAC;iBACH;gBAED,OAAO,CACL,oBAAC,QAAQ,uBAAK,IAAI,IAAE,QAAQ,EAAE,QAAQ,EAAE,aAAa,WAClD,UAAC,MAAM,EAAE,OAAO;;oBACf,IAAM,IAAI,GAAG,gBAAgB,CAAC,IAAI,IAAI,QAAQ,CAAC;oBAC/C,IAAI,UAAU,aAAK,GAAC,IAAI,IAAG,MAAM,KAAE,CAAC;oBACpC,IAAI,gBAAgB,CAAC,KAAK,EAAE;wBAC1B,IAAM,SAAS;4BACb,GAAC,IAAI,IAAG,MAAM;4BACd,WAAQ,GAAE,KAAK;+BAChB,CAAC;wBACF,UAAU,GAAG,gBAAgB,CAAC,KAAK,CAAC,SAAS,CAAQ,CAAC;qBACvD;oBAED,OAAO,oBAAC,gBAAgB,uBAAK,KAAK,EAAM,UAAU,EAAI,CAAC;gBACzD,CAAC,CACQ,CACZ,CAAC;YACJ,CAAC;YAtCM,mBAAW,GAAG,kBAAkB,CAAC;YACjC,wBAAgB,GAAG,gBAAgB,CAAC;YAsC7C,cAAC;SAAA,AAxCD,CAAsB,WAAW,GAwChC;QAGD,OAAO,oBAAoB,CAAC,OAAO,EAAE,gBAAgB,EAAE,EAAE,CAAC,CAAC;IAC7D,CAAC,CAAC;AACJ,CAAC\"}","code":"import * as tslib_1 from \"tslib\";\r\nimport * as React from 'react';\r\nvar hoistNonReactStatics = require('hoist-non-react-statics');\r\nimport { parser } from './parser';\r\nimport { default as Mutation } from './Mutation';\r\nimport { defaultMapPropsToOptions, getDisplayName, calculateVariablesFromProps, GraphQLBase, } from './hoc-utils';\r\nexport function withMutation(document, operationOptions) {\r\n    if (operationOptions === void 0) { operationOptions = {}; }\r\n    var operation = parser(document);\r\n    var _a = operationOptions.options, options = _a === void 0 ? defaultMapPropsToOptions : _a, _b = operationOptions.alias, alias = _b === void 0 ? 'Apollo' : _b;\r\n    var mapPropsToOptions = options;\r\n    if (typeof mapPropsToOptions !== 'function')\r\n        mapPropsToOptions = function () { return options; };\r\n    return function (WrappedComponent) {\r\n        var graphQLDisplayName = alias + \"(\" + getDisplayName(WrappedComponent) + \")\";\r\n        var GraphQL = (function (_super) {\r\n            tslib_1.__extends(GraphQL, _super);\r\n            function GraphQL() {\r\n                return _super !== null && _super.apply(this, arguments) || this;\r\n            }\r\n            GraphQL.prototype.render = function () {\r\n                var props = this.props;\r\n                var opts = mapPropsToOptions(props);\r\n                if (operationOptions.withRef) {\r\n                    this.withRef = true;\r\n                    props = Object.assign({}, props, {\r\n                        ref: this.setWrappedInstance,\r\n                    });\r\n                }\r\n                if (!opts.variables && operation.variables.length > 0) {\r\n                    opts.variables = calculateVariablesFromProps(operation, props, graphQLDisplayName, getDisplayName(WrappedComponent));\r\n                }\r\n                return (React.createElement(Mutation, tslib_1.__assign({}, opts, { mutation: document, ignoreResults: true }), function (mutate, _result) {\r\n                    var _a, _b;\r\n                    var name = operationOptions.name || 'mutate';\r\n                    var childProps = (_a = {}, _a[name] = mutate, _a);\r\n                    if (operationOptions.props) {\r\n                        var newResult = (_b = {},\r\n                            _b[name] = mutate,\r\n                            _b.ownProps = props,\r\n                            _b);\r\n                        childProps = operationOptions.props(newResult);\r\n                    }\r\n                    return React.createElement(WrappedComponent, tslib_1.__assign({}, props, childProps));\r\n                }));\r\n            };\r\n            GraphQL.displayName = graphQLDisplayName;\r\n            GraphQL.WrappedComponent = WrappedComponent;\r\n            return GraphQL;\r\n        }(GraphQLBase));\r\n        return hoistNonReactStatics(GraphQL, WrappedComponent, {});\r\n    };\r\n}\r\n//# sourceMappingURL=mutation-hoc.js.map","dts":{"name":"/Users/jovi/Documents/SideProjects/react-apollo/src/mutation-hoc.d.ts","writeByteOrderMark":false,"text":"import * as React from 'react';\r\nimport { DocumentNode } from 'graphql';\r\nimport { OperationOption, MutateProps } from './types';\r\nexport declare function withMutation<TProps extends TGraphQLVariables | {} = {}, TData = {}, TGraphQLVariables = {}, TChildProps = MutateProps<TData, TGraphQLVariables>>(document: DocumentNode, operationOptions?: OperationOption<TProps, TData, TGraphQLVariables, TChildProps>): (WrappedComponent: React.ComponentType<TChildProps & TProps>) => React.ComponentClass<TProps, any>;\r\n"}}
