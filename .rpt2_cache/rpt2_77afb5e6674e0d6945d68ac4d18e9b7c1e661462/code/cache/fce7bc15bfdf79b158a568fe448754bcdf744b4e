{"map":"{\"version\":3,\"file\":\"ApolloProvider.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../src/ApolloProvider.tsx\"],\"names\":[],\"mappings\":\";AACA,OAAO,KAAK,SAAS,MAAM,YAAY,CAAC;AACxC,OAAO,EAAE,SAAS,EAAE,MAAM,OAAO,CAAC;AAIlC,IAAM,SAAS,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC;AAOvC;IAAoD,0CAAsC;IAaxF,wBAAY,KAAkC,EAAE,OAAY;QAA5D,YACE,kBAAM,KAAK,EAAE,OAAO,CAAC,SActB;QAjBO,gBAAU,GAAyD,IAAI,GAAG,EAAE,CAAC;QAKnF,SAAS,CACP,KAAK,CAAC,MAAM,EACZ,wDAAwD;YACtD,qDAAqD,CACxD,CAAC;QAKF,IAAI,CAAE,KAAK,CAAC,MAAc,CAAC,oBAAoB,EAAE;YAC9C,KAAK,CAAC,MAAc,CAAC,oBAAoB,GAAG,KAAI,CAAC,UAAU,CAAC;SAC9D;;IACH,CAAC;IAED,wCAAe,GAAf;QACE,OAAO;YACL,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM;YACzB,UAAU,EAAG,IAAI,CAAC,KAAK,CAAC,MAAc,CAAC,oBAAoB;SAC5D,CAAC;IACJ,CAAC;IAED,+BAAM,GAAN;QACE,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;IAC7B,CAAC;IAtCM,wBAAS,GAAG;QACjB,MAAM,EAAE,SAAS,CAAC,MAAM,CAAC,UAAU;QACnC,QAAQ,EAAE,SAAS,CAAC,IAAI,CAAC,UAAU;KACpC,CAAC;IAEK,gCAAiB,GAAG;QACzB,MAAM,EAAE,SAAS,CAAC,MAAM,CAAC,UAAU;QACnC,UAAU,EAAE,SAAS,CAAC,MAAM;KAC7B,CAAC;IA+BJ,qBAAC;CAAA,AAxCD,CAAoD,SAAS,GAwC5D;eAxCoB,cAAc\"}","code":"import * as tslib_1 from \"tslib\";\r\nimport * as PropTypes from 'prop-types';\r\nimport { Component } from 'react';\r\nvar invariant = require('invariant');\r\nvar ApolloProvider = (function (_super) {\r\n    tslib_1.__extends(ApolloProvider, _super);\r\n    function ApolloProvider(props, context) {\r\n        var _this = _super.call(this, props, context) || this;\r\n        _this.operations = new Map();\r\n        invariant(props.client, 'ApolloProvider was not passed a client instance. Make ' +\r\n            'sure you pass in your client via the \"client\" prop.');\r\n        if (!props.client.__operations_cache__) {\r\n            props.client.__operations_cache__ = _this.operations;\r\n        }\r\n        return _this;\r\n    }\r\n    ApolloProvider.prototype.getChildContext = function () {\r\n        return {\r\n            client: this.props.client,\r\n            operations: this.props.client.__operations_cache__,\r\n        };\r\n    };\r\n    ApolloProvider.prototype.render = function () {\r\n        return this.props.children;\r\n    };\r\n    ApolloProvider.propTypes = {\r\n        client: PropTypes.object.isRequired,\r\n        children: PropTypes.node.isRequired,\r\n    };\r\n    ApolloProvider.childContextTypes = {\r\n        client: PropTypes.object.isRequired,\r\n        operations: PropTypes.object,\r\n    };\r\n    return ApolloProvider;\r\n}(Component));\r\nexport default ApolloProvider;\r\n//# sourceMappingURL=ApolloProvider.js.map","dts":{"name":"/Users/jovi/Documents/SideProjects/react-apollo/src/ApolloProvider.d.ts","writeByteOrderMark":false,"text":"import * as React from 'react';\r\nimport * as PropTypes from 'prop-types';\r\nimport { Component } from 'react';\r\nimport ApolloClient from 'apollo-client';\r\nexport interface ApolloProviderProps<TCache> {\r\n    client: ApolloClient<TCache>;\r\n    children: React.ReactNode;\r\n}\r\nexport default class ApolloProvider<TCache> extends Component<ApolloProviderProps<TCache>> {\r\n    static propTypes: {\r\n        client: PropTypes.Validator<object>;\r\n        children: PropTypes.Validator<string | number | boolean | {} | PropTypes.ReactElementLike | PropTypes.ReactNodeArray>;\r\n    };\r\n    static childContextTypes: {\r\n        client: PropTypes.Validator<object>;\r\n        operations: PropTypes.Requireable<object>;\r\n    };\r\n    private operations;\r\n    constructor(props: ApolloProviderProps<TCache>, context: any);\r\n    getChildContext(): {\r\n        client: ApolloClient<TCache>;\r\n        operations: any;\r\n    };\r\n    render(): React.ReactNode;\r\n}\r\n"}}
