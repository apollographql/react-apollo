import * as React from 'react';
import { Query } from 'react-apollo';

const QUERY = require('./Character.graphql');
// import types generated by codegen
// import { GetCharacterQuery, GetCharacterQueryVariables } from './schema';

export const Character = () => {
  <Query query={QUERY}>
    {({ loading, data: hero, error }) => {
      if (loading) return <div>Loading</div>;
      if (error) return <h1>ERROR</h1>;
      return (
        <div>
          {hero && (
            <div>
              <h3>{hero.name}</h3>
              {hero.friends.map(
                friend =>
                  friend && (
                    <h6 key={friend.id}>
                      {friend.name}:{' '}
                      {friend.appearsIn
                        .map(x => x && x.toLowerCase())
                        .join(', ')}
                    </h6>
                  ),
              )}
            </div>
          )}
        </div>
      );
    }}
  </Query>;
};

// export const Character = graphql<
//   {},
//   GetCharacterQuery,
//   GetCharacterQueryVariables
// >(HERO_QUERY, {
//   options: ({ episode }) => ({
//     variables: { episode },
//   }),
//   props: ({ data }) => ({ ...data }),
// })(CharacterWithoutData);

export default Character;
